using UnityEngine;
using Zenject;
using Cysharp.Threading.Tasks;
using System.Threading;

public class CharacterControlScript : MonoBehaviour
{
    private IMovementController _movementController;
    private IAnimationController _animationController;
    private IInputController _inputController;

    private Vector3 _prevPosition;

    [Inject]
    public void Construct(
        IMovementController movementController,
        IAnimationController animationController,
        IInputController inputController)
    {
        _movementController = movementController;
        _animationController = animationController;
        _inputController = inputController;

        // –ø–æ–¥–ø–∏—Å—ã–≤–∞–µ–º—Å—è –Ω–∞ —Å–æ–±—ã—Ç–∏–µ –¥–≤–∏–∂–µ–Ω–∏—è –∏–∑ InputController
        _inputController.OnMoveRequested += OnMoveRequested;
    }

    private void Start()
    {
        // —Å–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Ç–∞—Ä—Ç–æ–≤—É—é –ø–æ–∑–∏—Ü–∏—é –¥–ª—è —Ä–∞—Å—á—ë—Ç–∞ —Å–∫–æ—Ä–æ—Å—Ç–∏
        _prevPosition = transform.position;
    }

    private void Update()
    {
        // –æ–±–Ω–æ–≤–ª—è–µ–º –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä –≤–≤–æ–¥–∞ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –∫–ª–∏–∫ –º—ã—à–∫–æ–π)
        _inputController.Update();

        // –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –∞–Ω–∏–º–∞—Ü–∏–∏ —Ö–æ–¥—å–±—ã
        if (!_movementController.IsMoving)
            _animationController.SetWalking(false);
        else
            _animationController.SetWalking(true);

        // —Ä–∞—Å—á—ë—Ç —Å–∫–æ—Ä–æ—Å—Ç–∏ –¥–ª—è blend tree –∞–Ω–∏–º–∞—Ü–∏–π
        Vector3 curMove = _movementController.CurrentPosition - _prevPosition;
        float curSpeed = curMove.magnitude / Time.deltaTime;
        _prevPosition = _movementController.CurrentPosition;

        _animationController.SetSpeed(curSpeed);
    }

    private void OnMoveRequested(Vector3 targetPosition)
    {
        _movementController.MoveTo(targetPosition);
    }

    private void OnDestroy()
    {
        if (_inputController != null)
            _inputController.OnMoveRequested -= OnMoveRequested;
    }

    // üîπ –í—ã–∑–æ–≤ –∏–∑ –º–µ–Ω–µ–¥–∂–µ—Ä–∞ –∑–∞–¥–∞—á ‚Äì —ç–ª—å—Ñ –¥–≤–∏–≥–∞–µ—Ç—Å—è –∫ –ø–æ–¥–∞—Ä–∫—É
    public void MoveToGift(GameObject gift)
    {
        if (gift != null)
            _movementController.MoveTo(gift.transform.position);
    }

    // üîπ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –¥–ª—è –ª—é–±—ã—Ö —Ç–æ—á–µ–∫
    public void MoveTo(Vector3 target)
    {
        _movementController.MoveTo(target);
    }
}
